name: Execute Osmo Tests and Publish Report

on:
  workflow_dispatch:

jobs:
  test-and-publish:
    runs-on: ubuntu-22.04

    env:
      MOBILE_OS: Android
      ANDROID_HOME: /home/runner/Android/Sdk
      JAVA_HOME: /usr/lib/jvm/java-17-openjdk
      SDKROOT: /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS.sdk
      DEVICE_NAME: pixel_4_xl
      OS_VERSION: 14
      MAIN_ACTIVITY: com.osmo.smt.MainActivity
      APP_PACKAGE: com.osmo.smt

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install unzip
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip

      - name: Download Android Command Line Tools
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          curl -o commandlinetools.zip https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip commandlinetools.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest

      - name: Set up Java 17
        id: setup-java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Android SDK Platform-Tools
        env:
          JAVA_HOME: ${{ steps.setup-java.outputs.java-home }}
        run: |
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install "platform-tools"

      - name: Add Android platform-tools to PATH
        run: echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH

      - name: Verify adb installation
        run: |
          adb version
          which adb

      - name: Verify shell and PATH
        run: |
          which sh
          sh --version || echo "sh not found"
          echo $PATH

      - name: Restart adb server
        run: |
          adb kill-server
          adb start-server

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Appium v1.22.3
        run: npm install -g appium@1.22.3

      - name: Detect Node executable path
        id: detect_node_path
        run: |
          NODE_PATH=$(which node)
          if [ -x "$NODE_PATH" ]; then
            echo "Node executable found at $NODE_PATH"
            echo "NODE_PATH=$NODE_PATH" >> $GITHUB_ENV
          else
            echo "Node executable not found!"
            exit 1
          fi

      - name: Detect Appium main.js path
        id: detect_appium_path
        run: |
          APP_PATH=$(npm root -g)/appium/build/lib/main.js
          if [ -f "$APP_PATH" ]; then
            echo "Appium main.js found at $APP_PATH"
            echo "APPIUM_FILE_PATH=$APP_PATH" >> $GITHUB_ENV
          else
            echo "Appium main.js not found!"
            exit 1
          fi

      - name: Verify Appium installation
        run: appium -v

      - name: Enable KVM for hardware acceleration
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Start Appium Server in background
        run: |
          nohup appium --base-path / > appium.log 2>&1 &
          sleep 10
          curl -f http://127.0.0.1:4723/status || (echo "Appium did not start properly" && cat appium.log && exit 1)

      - name: Verify APK file
        run: |
          ls -lh apks/Osmo.apk || echo "APK file not found!"
          file apks/Osmo.apk || echo "Invalid file"
          unzip -l apks/Osmo.apk || echo "Not a valid ZIP/APK"

      - name: Start emulator, install APK and run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          arch: x86
          target: google_apis
          profile: pixel_4
          disable-animations: true
          emulator-boot-timeout: 300
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          script: |
            echo "Emulator is running"
            
            echo "Waiting for emulator to appear online..."
            adb wait-for-device
            adb devices
            
            echo "Installing APK (first try)..."
            timeout 2m adb install -r apks/Osmo.apk
            INSTALL_RESULT=$?
            
            if [ "$INSTALL_RESULT" -ne 0 ]; then
              echo "First install failed. Retrying..."
              sleep 10
              timeout 2m adb install -r apks/Osmo.apk
            fi
            
            echo "Running Maven tests..."
            mvn test -DsuiteXmlFile=src/test/resources/testng.xml

      - name: Terminate Emulator (Optional)
        if: always()
        run: |
          $ANDROID_HOME/platform-tools/adb -s emulator-5554 emu kill || echo "Emulator already shut down"

      - name: Copy reports to temporary directory
        if: always()
        shell: bash
        run: |
          mkdir -p /tmp/reports
          shopt -s nullglob
          cp -r AndroidAutomationReport/* /tmp/reports/ || echo "No reports to copy."
          echo "Contents of /tmp/reports:"
          ls -lR /tmp/reports/

      - name: Clean untracked files before checkout
        if: always()
        run: git clean -fdx

      - name: Checkout gh-pages branch
        if: always()
        run: |
          git checkout gh-pages
          git pull origin gh-pages

      - name: Copy reports to gh-pages branch root
        if: always()
        shell: bash
        run: |
          shopt -s nullglob
          cp -r /tmp/reports/* . || echo "No reports to copy."
          echo "Contents of gh-pages branch root after copying reports:"
          ls -lR

      - name: Commit and push reports
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          echo "Git status before commit:"
          git status
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Add test reports from workflow run $GITHUB_RUN_ID"
            git push origin gh-pages
          fi